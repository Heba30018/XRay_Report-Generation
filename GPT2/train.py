# -*- coding: utf-8 -*-
"""Untitled38.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MCC3Zu7w4GSrsE3IMnhfuzxNRIiOkjr-
"""

# Load data
train_df = pd.read_csv('train_df.csv')
val_df = pd.read_csv('val_df.csv')

# Define Dataset class
class LoadDataset(Dataset):
    def __init__(self, df):
        self.images = df['imgs'].values
        self.captions = df['captions'].values

    def __getitem__(self, idx):
        inputs = dict()
        image_path = str(self.images[idx])
        image = Image.open(image_path).convert("RGB")
        image = feature_extractor(images=image, return_tensors='pt')
        caption = self.captions[idx]
        labels = tokenizer(caption, max_length=512, truncation=True, padding='max_length', return_tensors='pt')['input_ids'][0]
        inputs['pixel_values'] = image['pixel_values'].squeeze()
        inputs['labels'] = labels
        return inputs

    def __len__(self):
        return len(self.images)

# Create datasets
train_ds = LoadDataset(train_df)
val_ds = LoadDataset(val_df)

# Training arguments
training_args = Seq2SeqTrainingArguments(
    output_dir="image-caption-generator",
    evaluation_strategy="epoch",
    per_device_train_batch_size=8,
    per_device_eval_batch_size=8,
    learning_rate=5e-5,
    weight_decay=0.01,
    num_train_epochs=5,
    save_strategy='epoch',
    report_to='none',
)

# Initialize trainer
trainer = Seq2SeqTrainer(
    model=model,
    tokenizer=feature_extractor,
    data_collator=default_data_collator,
    train_dataset=train_ds,
    eval_dataset=val_ds,
    args=training_args,
)

# Train model
trainer.train()